ppower <- function(type,eta,lambda){
probs <- list(
pl = function(eta,lambda) plogis(eta)**lambda,
#plr = function(eta,lambda) 1-plogis(-eta)**lambda,
#pp = function(eta,lambda) pnorm(eta)**lambda,
#ppr = function(eta,lambda) 1-pnorm(-eta)**lambda,
pc = function(eta,lambda) pcauchy(eta)**lambda
#pcr = function(eta,lambda) 1-pcauchy(-eta)**lambda,
)
return(probs[[type]](eta,lambda))
}
genpower <- function(n,betavec,lambda,type){
#beta0 = betavec[1]
#beta = c(betavec[-1])
beta0 = betavec[1]
#beta1 = betavec[2]
#beta2 = betavec[3]
beta = betavec[-1]
#set.seed(123)
x1 = runif(n, -2, 2)
x2 = rnorm(n, 0, 1)
X = as.matrix(cbind(x1,x2))
#X = matrix(runif(n*NROW(beta),-3,3),ncol=NROW(beta))
prob = ppower(type,beta0+X%*%beta,lambda)
rm(list=".Random.seed", envir=globalenv())
y = numeric()
for(i in 1:n){y[i] = rbinom(1,1,prob[i])}
return(data.frame(cbind(X,y)))
}
datlogis = genpower (n=2500, betavec = c(0.5, 1, 1),lambda = 2, type = "pl")
getwd()
datlogis
head(datlogis)
mean(datlogis$y)
datlogis = genpower (n=2500, betavec = c(0.5, 1, 1),lambda = 2.5, type = "pl")
mean(datlogis$y)
datcauchy = genpower (n=2500, betavec = c(0.5, 1, 1),lambda = 2.5, type = "pc")
mean(datcauchy$y)
datcauchy[1:2000,]
train+datcauchy[1:2000,]
train=datcauchy[1:2000,]
test=datcauchy[2001:2500,]
fit1=glm(y~x1+x2, data=train, family=binomial(link = "logit"))
fit2=glm(y~x1+x2, data=train, family=binomial(link = "loglog"))
fit2=glm(y~x1+x2, data=train, family=binomial(link = "cloglog"))
summary(fit1)
summary(fit2)
coef(fit1)
coef(fit1)[1]
coef(fit1)[1]+coef(fit1)[2]*test$x1+coef(fit1)[3]*test$x2
plogis(coef(fit1)[1]+coef(fit1)[2]*test$x1+coef(fit1)[3]*test$x2)
library(MLmetrics)
LogLoss(plogis(coef(fit1)[1]+coef(fit1)[2]*test$x1+coef(fit1)[3]*test$x2,test$y)
)
test$y
LogLoss(plogis(coef(fit1)[1]+coef(fit1)[2]*test$x1+coef(fit1)[3]*test$x2,test$y))
LogLoss(plogis(coef(fit1)[1]+coef(fit1)[2]*test$x1+coef(fit1)[3]*test$x2, y_true=test$y))
LogLoss(plogis(coef(fit1)[1]+coef(fit1)[2]*test$x1+coef(fit1)[3]*test$x2, as.vector(test$y)))
fit1$fitted.values
LogLoss(plogis(coef(fit1)[1]+coef(fit1)[2]*test$x1+coef(fit1)[3]*test$x2)
)
LogLoss(plogis(coef(fit1)[1]+coef(fit1)[2]*test$x1+coef(fit1)[3]*test$x2))
testfitted+plogis(coef(fit1)[1]+coef(fit1)[2]*test$x1+coef(fit1)[3]*test$x2
testfitted+plogis(coef(fit1)[1]+coef(fit1)[2]*test$x1+coef(fit1)[3]*test$x2
testfitted=plogis(coef(fit1)[1]+coef(fit1)[2]*test$x1+coef(fit1)[3]*test$x2
)
LogLoss(plogis(coef(fit1)[1]+coef(fit1)[2]*test$x1+coef(fit1)[3]*test$x2),test$y)
testfitted
testfitted1=plogis(coef(fit1)[1]+coef(fit1)[2]*test$x1+coef(fit1)[3]*test$x2
)
testfitted2=plogis(coef(fit1)[1]+coef(fit1)[2]*test$x1+coef(fit1)[3]*test$x2)
LogLoss(testfitted1,test$y)
LogLoss(testfitted2,test$y)
library(gamlss.dist)
library(normalp)
testfitted2=pGU(coef(fit1)[1]+coef(fit1)[2]*test$x1+coef(fit1)[3]*test$x2)
LogLoss(testfitted2,test$y)
datcauchy = genpower (n=2500, betavec = c(0.5, 2, 1),lambda = 0.5, type = "pc")
testfitted1=plogis(coef(fit1)[1]+coef(fit1)[2]*test$x1+coef(fit1)[3]*test$x2)
testfitted2=plogis(coef(fit2)[1]+coef(fit2)[2]*test$x1+coef(fit2)[3]*test$x2)
LogLoss(testfitted1,test$y)
LogLoss(testfitted2,test$y)
testfitted2=pGu(coef(fit2)[1]+coef(fit2)[2]*test$x1+coef(fit2)[3]*test$x2)
library(gamlss.dist)
testfitted2=pGu(coef(fit2)[1]+coef(fit2)[2]*test$x1+coef(fit2)[3]*test$x2)
testfitted2=pGU(coef(fit2)[1]+coef(fit2)[2]*test$x1+coef(fit2)[3]*test$x2)
LogLoss(testfitted2,test$y)
datcauchy = genpower (n=2500, betavec = c(0.5, 2, 1),lambda = 0.5, type = "pc")
train=datcauchy[1:2000,]
test=datcauchy[2001:2500,]
fit1=glm(y~x1+x2, data=train, family=binomial(link = "logit"))
fit2=glm(y~x1+x2, data=train, family=binomial(link = "cloglog"))
library(MLmetrics)
testfitted1=plogis(coef(fit1)[1]+coef(fit1)[2]*test$x1+coef(fit1)[3]*test$x2)
testfitted2=pGU(coef(fit2)[1]+coef(fit2)[2]*test$x1+coef(fit2)[3]*test$x2)
LogLoss(testfitted1,test$y)
LogLoss(testfitted2,test$y)
GetClass=function(val){
for(i in 1:length(val)){
if (val[i]>0.5){predclass[i]=1}
else{predclass[i]=0}
}
return(preclass)}
GetClass(c(0,0.5,0.6))
GetClass=function(val){
preclass=c()
for(i in 1:length(val)){
if (val[i]>0.5){predclass[i]=1}
else{predclass[i]=0}
}
return(preclass)}
GetClass(c(0,0.5,0.6))
GetClass=function(val){
predclass=c()
for(i in 1:length(val)){
if (val[i]>0.5){predclass[i]=1}
else{predclass[i]=0}
}
return(preclass)}
GetClass(c(0,0.5,0.6))
GetClass=function(val){
predclass=c()
for(i in 1:length(val)){
if (val[i]>0.5){predclass[i]=1}
else{predclass[i]=0}
}
return(predclass)}
GetClass(c(0,0.5,0.6))
GetClass=function(val,threshold=0.5){
predclass=c()
for(i in 1:length(val)){
if (val[i]>threshold){predclass[i]=1}
else{predclass[i]=0}
}
return(predclass)}
GetClass(c(0,0.5,0.6))
GetClass(c(0,0.5,0.6),0.4)
classified1=GetClass(testfitted1)
classified2=GetClass(testfitted2)
sum(classified1-classified2)
LogLoss(classified1,test$y)
LogLoss(classified2,test$y)
classified2=GetClass(testfitted2,0.625)
LogLoss(classified2,test$y)
LogLoss(GetClass(testfitted2,0.625),test$y)
LogLoss(GetClass(testfitted2,0.62),test$y)
LogLoss(GetClass(testfitted2,0.63),test$y)
LogLoss(GetClass(testfitted2,0.9),test$y)
LogLoss(GetClass(testfitted2,0.62),test$y)
LogLoss(GetClass(testfitted2,0.625),test$y)
LogLoss(GetClass(testfitted2,0.6),test$y)
LogLoss(GetClass(testfitted2,0.5),test$y)
LogLoss(GetClass(testfitted2,0.6),test$y)
LogLoss(GetClass(testfitted1,0.5),test$y)
LogLoss(GetClass(testfitted1,0.55),test$y)
LogLoss(GetClass(testfitted1,0.625),test$y)
LogLoss(GetClass(testfitted1,0.7),test$y)
LogLoss(GetClass(testfitted1,0.3),test$y)
LogLoss(GetClass(testfitted1,0.623),test$y)
LogLoss(GetClass(testfitted1,0.6),test$y)
LogLoss(GetClass(testfitted1,0.65),test$y)
.5*.5
LogLoss(GetClass(testfitted1,0.75),test$y)
LogLoss(GetClass(testfitted1,0.62),test$y)
LogLoss(GetClass(testfitted2,0.62),test$y)
LogLoss(GetClass(testfitted2,0.63),test$y)
LogLoss(GetClass(testfitted2,0.61),test$y)
LogLoss(GetClass(testfitted2,0.5),test$y)
LogLoss(GetClass(testfitted2,0.3),test$y)
LogLoss(GetClass(testfitted2,0.7),test$y)
LogLoss(GetClass(testfitted2,0.62),test$y)
LogLoss(GetClass(testfitted1,0.5),test$y)
LogLoss(GetClass(testfitted1,0.6),test$y)
MAE(GetClass(testfitted1,0.6),test$y)
MAE(GetClass(testfitted2,0.6),test$y)
MAE(GetClass(testfitted2,0.5),test$y)
MAE(GetClass(testfitted2,0.62),test$y)
LogLoss(GetClass(testfitted1,0.6),test$y)
LogLoss(GetClass(testfitted2,0.6),test$y)
LogLoss(GetClass(testfitted1,0.625),test$y)
LogLoss(GetClass(testfitted2,0.625),test$y)
LogLoss(GetClass(testfitted2,0.62),test$y)
LogLoss(GetClass(testfitted2,0.63),test$y)
mean(datcauchy$y)
mean(train$y)
mean(testn$y)
mean(test$y)
